server {
  listen      80  default_server;
  listen      81  default_server http2 proxy_protocol; ## Needed when behind HAProxy with SSL termination + HTTP/2 support
  listen      443 default_server ssl http2;

  ssl_certificate       /etc/nginx/ssl/dummy.crt;
  ssl_certificate_key   /etc/nginx/ssl/dummy.key;

    location / {
        # try to serve file directly, fallback to front controller
        try_files $uri /index.php$is_args$args;
    }

    # If you have 2 front controllers for dev|prod use the following line instead
    # location ~ ^/(index|index_dev)\.php(/|$) {
    location ~ ^/index\.php(/|$) {
        # the ubuntu default
        #fastcgi_pass   unix:/var/run/php5-fpm.sock;
        # for running on centos
        #fastcgi_pass   unix:/var/run/php-fpm/www.sock;

        #fastcgi_split_path_info ^(.+\.php)(/.*)$;
        #include fastcgi_params;
        #fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        #fastcgi_param HTTPS off;

        include         fastcgi_params;
        fastcgi_pass    php-upstream;

        # Prevents URIs that include the front controller. This will 404:
        # http://domain.tld/index.php/some-path
        # Enable the internal directive to disable URIs like this
        # internal;
    }

    #return 404 for all php files as we do have a front controller
    location ~ \.php$ {
        return 404;
    }

  root        /data/www/public;
  index       index.php index.html;

  include     /etc/nginx/conf.d/default-*.conf;
  include     /data/conf/nginx/conf.d/default-*.conf;

  # PHP backend is not in the default-*.conf file set,
  # as some vhost might not want to include it.
  include     /etc/nginx/conf.d/php-location.conf;

  # Import configuration files for status pages for Nginx and PHP-FPM
  include /etc/nginx/conf.d/stub-status.conf;
  include /etc/nginx/conf.d/fpm-status.conf;
}
